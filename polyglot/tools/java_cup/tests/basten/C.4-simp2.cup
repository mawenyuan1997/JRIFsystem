terminal IDENTIFIER;
terminal MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, ADD_ASSIGN;
terminal SUB_ASSIGN, LEFT_ASSIGN, RIGHT_ASSIGN, AND_ASSIGN;
terminal XOR_ASSIGN, OR_ASSIGN;

terminal LPAREN, RPAREN, COMMA,
EQ, LBRACE, RBRACE
;

non terminal primary_expr, postfix_expr, unary_expr,
cast_expr, multiplicative_expr, additive_expr, shift_expr,
relational_expr, equality_expr, and_expr, exclusive_or_expr, inclusive_or_expr,
logical_and_expr, logical_or_expr, conditional_expr, assignment_expr,
assignment_operator,
init_declarator_list, init_declarator, declarator, declarator2,
initializer, initializer_list,
identifier;

start with init_declarator_list;

primary_expr
	::= identifier
	;

postfix_expr
	::= primary_expr
	;

unary_expr
	::= postfix_expr
	;

cast_expr
	::= unary_expr
	;

multiplicative_expr
	::= cast_expr
	;

additive_expr
	::= multiplicative_expr
	;

shift_expr
	::= additive_expr
	;

relational_expr
	::= shift_expr
	;

equality_expr
	::= relational_expr
	;

and_expr
	::= equality_expr
	;

exclusive_or_expr
	::= and_expr
	;

inclusive_or_expr
	::= exclusive_or_expr
	;

logical_and_expr
	::= inclusive_or_expr
	;

logical_or_expr
	::= logical_and_expr
	;

conditional_expr
	::= logical_or_expr
	;

assignment_expr
	::= conditional_expr
	| unary_expr assignment_operator assignment_expr
	;

assignment_operator
	::= EQ
	| MUL_ASSIGN
	| DIV_ASSIGN
	| MOD_ASSIGN
	| ADD_ASSIGN
	| SUB_ASSIGN
	| LEFT_ASSIGN
	| RIGHT_ASSIGN
	| AND_ASSIGN
	| XOR_ASSIGN
	| OR_ASSIGN
        | COMMA
	;

init_declarator_list
	::= init_declarator
	| init_declarator_list COMMA init_declarator
	;

init_declarator
	::= declarator
	| declarator EQ initializer
	;

declarator
	::= declarator2
	;

declarator2
	::= identifier
	| declarator2 LPAREN RPAREN
	;

initializer
	::= assignment_expr
	| LBRACE initializer_list RBRACE
	| LBRACE initializer_list COMMA RBRACE
	;

initializer_list
	::= initializer
	| initializer_list COMMA initializer
	;

identifier
	::= IDENTIFIER
	;
